@model Azure_Assignment.EF.Products


<div class="content-wrapper">
    <section class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1>Edit Product</h1>
                    <h5 style="color:red">@ViewBag.Error</h5>
                </div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href="~/Admin/">Admin</a></li>
                        <li class="breadcrumb-item"><a href="~/Admin/Products/">Products</a></li>
                        <li class="breadcrumb-item active">Edit Product</li>
                    </ol>
                </div>
            </div>
        </div>
    </section>

    <section class="content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-12">

                    <div class="card card-info">
                        <div class="card-header">
                            <h3 class="card-title">Edit Product</h3>
                        </div>
                        @using (Html.BeginForm("Edit", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
                        {
                            @Html.AntiForgeryToken()
                            <div class="form-horizontal">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.HiddenFor(model => model.ProductID)
                                <div class="card-body">
                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Product Name" } })
                                            @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.UnitPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.UnitPrice, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Unit Price", @type = "number", @min = 1 } })
                                            @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.OldUnitPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.OldUnitPrice, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Old Unit Price", @type = "number", @min = 1 } })
                                            @Html.ValidationMessageFor(model => model.OldUnitPrice, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.ShortDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.ShortDescription, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Short Description" } })
                                            @Html.ValidationMessageFor(model => model.ShortDescription, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.Thumbnail, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                                        <div class="col-sm-10">
                                            <div class="custom-file">
                                                <input type="file" class="custom-file-input" name="ImageFile" id="ImageFile">
                                                <label class="custom-file-label" for="customFile">Choose file</label>
                                            </div>
                                        </div>
                                    </div>
                                    <input type="hidden" name="old_thumbnail" value="@Session["old_Thumbnail"]" />

                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.TextAreaFor(model => model.Description, new { @id = "summernote" })
                                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.Specification, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.TextAreaFor(model => model.Specification, new { @id = "summernote_Specification" })
                                            @Html.ValidationMessageFor(model => model.Specification, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.SupplierID, "SupplierID", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.DropDownList("SupplierID", null, htmlAttributes: new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.SupplierID, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.CategoryID, "CategoryID", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.DropDownList("CategoryID", null, htmlAttributes: new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.SaleID, "SaleID", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.DropDownList("SaleID", null, htmlAttributes: new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.SaleID, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.Discontinued, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            <div class="checkbox">
                                                @{
                                                    var selectListDiscontinued = new SelectList(
                                                        new List<SelectListItem> { 
                                                            new SelectListItem {Text = "Being sold", Value = "false"},
                                                            new SelectListItem {Text = "Stop selling", Value = "true"}, }, "Value", "Text");
                                                }
                                                @Html.DropDownListFor(model => model.Discontinued, selectListDiscontinued, htmlAttributes: new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.Discontinued, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>

                                </div>

                                <div class="card-footer">
                                    <button type="submit" class="btn btn-success">Save</button>
                                    <button type="reset" class="btn btn-default float-right" onclick="window.location = '../'">Cancel</button>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>

@section ScriptConfig
{
    <script src="~/Scripts/plugins/summernote/summernote-bs4.min.js"></script>
    <link href="~/Scripts/plugins/summernote/summernote-bs4.min.css" rel="stylesheet" />
    <script>
        // Summernote
        $(function () {
            $('#summernote').summernote()
            $('#summernote_Specification').summernote()
        })

    </script>
}